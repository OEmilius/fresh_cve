
- читаем конфигурационный фаил config.json
- инициализируем кэш
- загружем ранее сохраненный кэш
- инициализирем LOADER - (опрашивает провайдеров)
- передаем в web сервер адрес инициализированного кэша
- запускаем web сервер
- запускаем пириодическу загрузку свежих уязвимостей


# добавление новых источников
cve/cve_новый источник
## добавть функцию decode возвращающуюю []Cve 
## в пакете loader в func DecodeAnswer(a provider.Answer) (result []cve.Cve) {
	switch a.Format {
	case "новый источник":
## в config.json указать название формата 
	{"Format": "новый источник",
	"Address": "http://новый источник"},	








заметки по ходу 

#расхождение с ТЗ:
##этот метод
(метод
http://access.redhat.com/labs/securitydataapi/cvrf.json?after=2018-03-14 вернет все
возвращет RHSA
насколько понимаю нас интересуют CVE
поэтому изменил на
"http://access.redhat.com/labs/securitydataapi/cve.json?after=2018-03-14"

## уточнить важен ли формат вывода jsoт - нужны ли переносы строк после [ ], {} и обьектов ?

## уточнить один на всех default timeout дл¤ ожидани¤ ответа от провайдеров или под каждого свой ?